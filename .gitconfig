[include]
  path = ~/.gitconfig.local

[alias]
  alias = config --get-regexp 'alias'
  amend = commit --amend
  append = commit --amend --no-edit
  branches = branch -a -vv
  browse-file = !zsh -ic browse_file
  browse-repository = !zsh -ic open_remote
  changelog = !git log $(git describe --abbrev=0)...$(git rev-parse --abbrev-ref HEAD) --pretty=format:'- %s'
  clean-all = !git reset --hard HEAD && git clean -d -f
  create-branch = !read -p 'new branch name: ' branch && git switch -c $branch
  create-tag = !read -p 'tag name: ' t && git tag --annotate $t
  create-tag-remote = !read -p 'tag name: ' t && git tag --annotate $t && git push origin ${t}
  create-signed-tag = !read -p 'tag name: ' t && git tag -s $t
  create-signed-tag-remote = !read -p 'tag name: ' t && git tag -s $t && git push origin ${t}
  delete-tag = !read -p 'tag name: ' t && git tag --delete $t
  delete-tag-remote = !read -p 'tag name: ' t && git tag --delete $t && git push origin :refs/tags/${t}
  develop = !git switch develop && git fetch -p && git merge origin/develop
  hash = show --format='%H' --no-patch
  last = log --pretty=fuller -1 HEAD
  log-full = log --pretty=fuller
  log-graph = log --graph --date=short --decorate=short --pretty=format:'%C(yellow)%h %cd %Creset-- %Cgreen%an %Cred%d %Creset%s'
  ls-tree-all = ls-tree -r --name-only --full-name HEAD
  main = !git switch main && git fetch -p && git merge origin/main
  master = !git switch master && git fetch -p && git merge origin/master
  root = rev-parse --show-toplevel
  save = stash save -u
  summary = status -uall -s
  tags = tag -l --format='%(refname:strip=2)\t%(taggerdate:format:%Y-%m-%d_%H:%M:%S)' --sort=-taggerdate
  unadd = reset HEAD
  uncommit = reset --soft HEAD^
  upload-head = push origin HEAD

[color]
  ui = auto

[core]
  autocrlf = input
  editor = vim
  excludesfile = ~/.gitignore_global
  ignorecase = false

[diff]
  compactionHeuristic = true

[ghq]
  root = ~/ghq

[push]
  default = simple
